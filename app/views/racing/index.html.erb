<h1>Racing Rooms</h1>

<div>
  <button class="btn mb-3 mx-auto" id="create-room-btn">Create a room</button> 
</div>

<%= form_for :invitation, url: '/invitation/new', method: 'get', remote: true, html: {class: "d-none"} do |f| %>
  <%= f.text_field (:user_id), value: current_user.id %>
  <%= f.text_field (:content) %>
  <%= f.text_field (:room_id) %>
  <%= f.submit id: 'sand_news', data: { disable_with: false } %>
<% end %>

<div class="racing-container justify-content-start">
  <div class="lesson-select">
    <div class="row" id="new-create">
      <% @rooms.each  do |room|%>
        <div class="col-xl-4 col-lg-4 col-md-6 col-sm-12">
          <div class="card-body">
            <div class="request-title d-flex justify-content-between">
              <% if room.user %>
                <p>Owner:<%= room.user.nickname %></p>
              <% end %>
              <% if current_user.id == room.user_id%>
                <div class="btn post-news" id="room<%= room.id %>" data-room-name= "<%= room.name %>" data-room-id= " <%= room.id %>"> <%=image_tag=image_tag('/icon/globe.svg')%> </div>
              <% end %>
            </div>

            <h5><%= room.name %></h5>
            <p><%= room.description %></p>
            <p>Player：<span class="room<%= room.id%>-counter"><%= room.members %></span>persons</p>
            <div class="link-group d-flex">
              <% if room.members >= 2 %>
                <a href="#" class="btn disabled">Full</a>
              <% else %>
                <%= link_to "Join", room_path(room.id), class: 'btn player-counter',id: room.id, data: {counter: room.members} %>
              <% end %>
              <% if current_user.id == room.user_id%>
                <%= link_to(image_tag('/icon/edit-custom.svg'), edit_room_path(room.id), class: 'edit-racing') %>
                <%= link_to(image_tag('/icon/trash-2.svg'),  room_path(room.id), class:'trash', id: "delete-room-btn", method: "DELETE") %>
              <% end %>
            </div>
          </div>
        </div>
      <% end %>
    </div>
  </div>
</div>

<!-- Create room 隱藏欄位 -->
<div class="lesson-select statu-params d-none">
  <div class="card">
    <div class="card-body">
      <%= form_for @room do |f|%>
        <div class="form-row">
          <div class="form-group mr-2">
            <%= f.label :name %>
            <%= f.text_field :name, class: 'form-control' %>
          </div>
          <div class="form-group mr-2">
            <%= f.label :description %>
            <%= f.text_field :description, class: 'form-control' %>
          </div>
          <div class="form-group">
            <%= f.submit class: 'btn btn-primary', id: 'room_submit' %>
          </div>
        </div>
      <% end %>
    </div>   
  </div>
</div>






<!-- Create Room 彈出視窗 -->
<script>
  let roomBtn = document.querySelector('#create-room-btn')
  let deleteRoomBtn = document.querySelectorAll('#delete-room-btn')
  let roomName = document.querySelector('#room_name')
  let roomDescription = document.querySelector('#room_description')
  let createBtn = document.querySelector('#room_submit')
  
  roomBtn.addEventListener('click', () => {
    getData();
  })
  async function getData() {
    const { value: formValues } = await Swal.fire({
      title: 'Create a room',
      showCancelButton: true,
      confirmButtonText: 'Yes, Create it!',
      html:
        '<input id="swal-input1" class="swal2-input" placeholder="Room Name">' +
        '<input id="swal-input2" class="swal2-input" placeholder="Description" >',
      focusConfirm: false,
      preConfirm: () => {
        let inputName = document.getElementById('swal-input1')
        let inputDescription = document.getElementById('swal-input2')
        if (inputName.value === '' || inputDescription.value === '') {
          Swal.showValidationMessage(
            `Request failed: Name and Description `
          )
        } else {
          return [
            inputName.value,
            inputDescription.value
          ]
        }
      }
    })

    if (formValues) {

      let timerInterval
      Swal.fire({
        title: 'Room has created!',
        html:
          '<div>Room Name : ' + formValues[0] + '</div>' +
          '<div>Description : ' + formValues[1] + '</div>',
        timer: 2000,
        timerProgressBar: false,
        onClose: () => {
          clearInterval(timerInterval)
        }
      }).then(() => {
        roomName.value = formValues[0]
        roomDescription.value = formValues[1]
        createBtn.click()
      })
    }
  }
  /* delete room 彈出視窗 */
  let stepStatus = false
  deleteRoomBtn.forEach((deleteBtn) => {
    deleteBtn.addEventListener('click', (btn) => {
      if (stepStatus === false) {
        btn.preventDefault();
        btn.stopPropagation();
          Swal.fire({
          title: 'Are you sure?',
          text: "You won't be able to revert this!",
          icon: 'warning',
          showCancelButton: true,
          confirmButtonColor: '#3085d6',
          cancelButtonColor: '#d33',
          confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
          if (result.value) {
            Swal.fire({
              icon: 'success',
              title: 'Your room has deleted!',
              showConfirmButton: false,
              timer: 1500
            })
            stepStatus = true;
            setTimeout(() => {
              deleteBtn.click();
            }, 1000);
          }
        })
      }
      if (stepStatus === true) {
        stepStatus = false
      }
    })
  })
</script>