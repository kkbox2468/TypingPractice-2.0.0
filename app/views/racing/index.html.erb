<h1>Racing Rooms</h1>


<div class="lesson-select">
  <div class="card">
      <button class="btn mb-3 mx-auto" id="create-room-btn">Create a room</button> 
  </div>
  <div class="card">
  <% @rooms.each do |room|%>
    <div class="card-body">
      <h5><%= room.name %></h5>
      <p><%= room.description %></p>
      <%= link_to "Join", room_path(room.id), class: 'btn' %>
      <%= link_to "編輯", edit_room_path(room.id), class: 'btn' %>
      <%= link_to "刪除", room_path(room.id), class: 'btn', method: "DELETE" %>
    </div>
  <% end %>
  </div>
</div>

<!-- Create room 隱藏欄位 -->
<div class="lesson-select statu-params">
  <div class="card">
    <div class="card-body">
      <%= form_for @room do |f|%>
        <div class="form-row">
          <div class="form-group mr-2">
            <%= f.label :name %>
            <%= f.text_field :name, class: 'form-control' %>
          </div>
          <div class="form-group mr-2">
            <%= f.label :description %>
            <%= f.text_field :description, class: 'form-control' %>
          </div>
          <div class="form-group">
            <%= f.submit class: 'btn btn-primary', id: 'room_submit' %>
          </div>
        </div>
      <% end %>
    </div>   
  </div>
</div>






<!-- Create Room 彈出視窗 -->
<script>
  let roomBtn = document.querySelector('#create-room-btn')
  let roomName = document.querySelector('#room_name')
  let roomDescription = document.querySelector('#room_description')
  let createBtn = document.querySelector('#room_submit')

  roomBtn.addEventListener('click', () => {
    getData();
  })
  async function getData() {
    const { value: formValues } = await Swal.fire({
      title: 'Create a room',
      showCancelButton: true,
      confirmButtonText: 'Yes, Create it!',
      html:
        '<input id="swal-input1" class="swal2-input" placeholder="Room Name">' +
        '<input id="swal-input2" class="swal2-input" placeholder="Description" >',
      focusConfirm: false,
      preConfirm: () => {
        let inputName = document.getElementById('swal-input1')
        let inputDescription = document.getElementById('swal-input2')
        if (inputName.value === '' || inputDescription.value === '') {
          Swal.showValidationMessage(
            `Request failed: Name and Description `
          )
        } else {
          return [
            inputName.value,
            inputDescription.value
          ]
        }
      }
    })

    if (formValues) {
      // Swal.fire(JSON.stringify(formValues))
      let timerInterval
      Swal.fire({
        title: 'Room has created!',
        html:
          '<div>Room Name : ' + formValues[0] + '</div>' +
          '<div>Description : ' + formValues[1] + '</div>',
        timer: 2000,
        timerProgressBar: false,
        onClose: () => {
          clearInterval(timerInterval)
        }
      }).then(() => {
        roomName.value = formValues[0]
        roomDescription.value = formValues[1]
        createBtn.click()
      })
    }
  }
</script>